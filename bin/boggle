#!/usr/bin/env ruby
lib = File.expand_path('../../lib', __FILE__)
$:.unshift(lib) if File.directory?(lib) && !$:.include?(lib)

require 'boggle'
require 'optparse'

opts = {}
ARGV.options do |argv|
  argv.banner = "Usage: boggle [options]"
  argv.on("-d", "--define", "Show a definition dump at the end") { |d| opts[:define] = d }
  argv.on("--dictionary", String, "Change the default dictionary") { |dict| opts[:dictionary] = dict }
  argv.on("-b", "--board", String, "Give a string as input to be the board") { |b|  opts[:board] = b }
  argv.on("-v", "--variant", Integer, "Give the board variant") { |v| opts[:variant] = v  }
  argv.on("-s", "--size", Integer, "Give the size of the board to use") { |s| opts[:size] = s }
end

opts = {:dictionary => "system.dict", :board => "", :variant => 0, :size => 4}.merge opts
opts[:size] = Math.sqrt(opts[:board].size).to_i if !opts[:board].empty?
Boggle::Game.new(Boggle::Board.new(opts), opts).start
